/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rcs.webform.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.rcs.webform.model.FormToPorletMap;
import com.rcs.webform.model.FormToPorletMapModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the FormToPorletMap service. Represents a row in the &quot;rcswebform_FormToPorletMap&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.rcs.webform.model.FormToPorletMapModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link FormToPorletMapImpl}.
 * </p>
 *
 * @author ryusuf
 * @see FormToPorletMapImpl
 * @see com.rcs.webform.model.FormToPorletMap
 * @see com.rcs.webform.model.FormToPorletMapModel
 * @generated
 */
public class FormToPorletMapModelImpl extends BaseModelImpl<FormToPorletMap>
	implements FormToPorletMapModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a form to porlet map model instance should use the {@link com.rcs.webform.model.FormToPorletMap} interface instead.
	 */
	public static final String TABLE_NAME = "rcswebform_FormToPorletMap";
	public static final Object[][] TABLE_COLUMNS = {
			{ "formToPorletMapId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "formId", Types.BIGINT },
			{ "portletId", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table rcswebform_FormToPorletMap (formToPorletMapId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,formId LONG,portletId VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table rcswebform_FormToPorletMap";
	public static final String ORDER_BY_JPQL = " ORDER BY formToPorletMap.formToPorletMapId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY rcswebform_FormToPorletMap.formToPorletMapId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.rcs.webform.model.FormToPorletMap"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.rcs.webform.model.FormToPorletMap"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.rcs.webform.model.FormToPorletMap"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long PORTLETID_COLUMN_BITMASK = 4L;
	public static long FORMTOPORLETMAPID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.rcs.webform.model.FormToPorletMap"));

	public FormToPorletMapModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _formToPorletMapId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setFormToPorletMapId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _formToPorletMapId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return FormToPorletMap.class;
	}

	@Override
	public String getModelClassName() {
		return FormToPorletMap.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("formToPorletMapId", getFormToPorletMapId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("formId", getFormId());
		attributes.put("portletId", getPortletId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long formToPorletMapId = (Long)attributes.get("formToPorletMapId");

		if (formToPorletMapId != null) {
			setFormToPorletMapId(formToPorletMapId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long formId = (Long)attributes.get("formId");

		if (formId != null) {
			setFormId(formId);
		}

		String portletId = (String)attributes.get("portletId");

		if (portletId != null) {
			setPortletId(portletId);
		}
	}

	@Override
	public long getFormToPorletMapId() {
		return _formToPorletMapId;
	}

	@Override
	public void setFormToPorletMapId(long formToPorletMapId) {
		_formToPorletMapId = formToPorletMapId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getFormId() {
		return _formId;
	}

	@Override
	public void setFormId(long formId) {
		_formId = formId;
	}

	@Override
	public String getPortletId() {
		if (_portletId == null) {
			return StringPool.BLANK;
		}
		else {
			return _portletId;
		}
	}

	@Override
	public void setPortletId(String portletId) {
		_columnBitmask |= PORTLETID_COLUMN_BITMASK;

		if (_originalPortletId == null) {
			_originalPortletId = _portletId;
		}

		_portletId = portletId;
	}

	public String getOriginalPortletId() {
		return GetterUtil.getString(_originalPortletId);
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			FormToPorletMap.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public FormToPorletMap toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (FormToPorletMap)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		FormToPorletMapImpl formToPorletMapImpl = new FormToPorletMapImpl();

		formToPorletMapImpl.setFormToPorletMapId(getFormToPorletMapId());
		formToPorletMapImpl.setGroupId(getGroupId());
		formToPorletMapImpl.setCompanyId(getCompanyId());
		formToPorletMapImpl.setUserId(getUserId());
		formToPorletMapImpl.setUserName(getUserName());
		formToPorletMapImpl.setCreateDate(getCreateDate());
		formToPorletMapImpl.setModifiedDate(getModifiedDate());
		formToPorletMapImpl.setFormId(getFormId());
		formToPorletMapImpl.setPortletId(getPortletId());

		formToPorletMapImpl.resetOriginalValues();

		return formToPorletMapImpl;
	}

	@Override
	public int compareTo(FormToPorletMap formToPorletMap) {
		long primaryKey = formToPorletMap.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof FormToPorletMap)) {
			return false;
		}

		FormToPorletMap formToPorletMap = (FormToPorletMap)obj;

		long primaryKey = formToPorletMap.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		FormToPorletMapModelImpl formToPorletMapModelImpl = this;

		formToPorletMapModelImpl._originalGroupId = formToPorletMapModelImpl._groupId;

		formToPorletMapModelImpl._setOriginalGroupId = false;

		formToPorletMapModelImpl._originalCompanyId = formToPorletMapModelImpl._companyId;

		formToPorletMapModelImpl._setOriginalCompanyId = false;

		formToPorletMapModelImpl._originalPortletId = formToPorletMapModelImpl._portletId;

		formToPorletMapModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<FormToPorletMap> toCacheModel() {
		FormToPorletMapCacheModel formToPorletMapCacheModel = new FormToPorletMapCacheModel();

		formToPorletMapCacheModel.formToPorletMapId = getFormToPorletMapId();

		formToPorletMapCacheModel.groupId = getGroupId();

		formToPorletMapCacheModel.companyId = getCompanyId();

		formToPorletMapCacheModel.userId = getUserId();

		formToPorletMapCacheModel.userName = getUserName();

		String userName = formToPorletMapCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			formToPorletMapCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			formToPorletMapCacheModel.createDate = createDate.getTime();
		}
		else {
			formToPorletMapCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			formToPorletMapCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			formToPorletMapCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		formToPorletMapCacheModel.formId = getFormId();

		formToPorletMapCacheModel.portletId = getPortletId();

		String portletId = formToPorletMapCacheModel.portletId;

		if ((portletId != null) && (portletId.length() == 0)) {
			formToPorletMapCacheModel.portletId = null;
		}

		return formToPorletMapCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{formToPorletMapId=");
		sb.append(getFormToPorletMapId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", formId=");
		sb.append(getFormId());
		sb.append(", portletId=");
		sb.append(getPortletId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("com.rcs.webform.model.FormToPorletMap");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>formToPorletMapId</column-name><column-value><![CDATA[");
		sb.append(getFormToPorletMapId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>formId</column-name><column-value><![CDATA[");
		sb.append(getFormId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>portletId</column-name><column-value><![CDATA[");
		sb.append(getPortletId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = FormToPorletMap.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			FormToPorletMap.class
		};
	private long _formToPorletMapId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _formId;
	private String _portletId;
	private String _originalPortletId;
	private long _columnBitmask;
	private FormToPorletMap _escapedModel;
}